using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace Ymf825.JapariOrgel.Jpm
{
    public static class JpmLcdChars
    {
        #region -- Private Fields --

        private static readonly Dictionary<char, byte> CharacterMap = new Dictionary<char, byte>
        {
            { '→', 0b0111_1110 },
            { '←', 0b0111_1111 },

            { '。', 0b1010_0001 },
            { '「', 0b1010_0010 },
            { '」', 0b1010_0011 },
            { '、', 0b1010_0100 },
            { '・', 0b1010_0101 },

            { 'ヲ', 0b1010_0110 },
            { 'ァ', 0b1010_0111 },
            { 'ィ', 0b1010_1000 },
            { 'ゥ', 0b1010_1001 },
            { 'ェ', 0b1010_1010 },
            { 'ォ', 0b1010_1011 },
            { 'ャ', 0b1010_1100 },
            { 'ュ', 0b1010_1101 },
            { 'ョ', 0b1010_1110 },
            { 'ッ', 0b1010_1111 },

            { 'ー', 0b1011_0000 },
            { 'ア', 0b1011_0001 },
            { 'イ', 0b1011_0010 },
            { 'ウ', 0b1011_0011 },
            { 'エ', 0b1011_0100 },
            { 'オ', 0b1011_0101 },
            { 'カ', 0b1011_0110 },
            { 'キ', 0b1011_0111 },
            { 'ク', 0b1011_1000 },
            { 'ケ', 0b1011_1001 },
            { 'コ', 0b1011_1010 },
            { 'サ', 0b1011_1011 },
            { 'シ', 0b1011_1100 },
            { 'ス', 0b1011_1101 },
            { 'セ', 0b1011_1110 },
            { 'ソ', 0b1011_1111 },

            { 'タ', 0b1100_0000 },
            { 'チ', 0b1100_0001 },
            { 'ツ', 0b1100_0010 },
            { 'テ', 0b1100_0011 },
            { 'ト', 0b1100_0100 },
            { 'ナ', 0b1100_0101 },
            { 'ニ', 0b1100_0110 },
            { 'ヌ', 0b1100_0111 },
            { 'ネ', 0b1100_1000 },
            { 'ノ', 0b1100_1001 },
            { 'ハ', 0b1100_1010 },
            { 'ヒ', 0b1100_1011 },
            { 'フ', 0b1100_1100 },
            { 'ヘ', 0b1100_1101 },
            { 'ホ', 0b1100_1110 },
            { 'マ', 0b1100_1111 },

            { 'ミ', 0b1101_0000 },
            { 'ム', 0b1101_0001 },
            { 'メ', 0b1101_0010 },
            { 'モ', 0b1101_0011 },
            { 'ヤ', 0b1101_0100 },
            { 'ユ', 0b1101_0101 },
            { 'ヨ', 0b1101_0110 },
            { 'ラ', 0b1101_0111 },
            { 'リ', 0b1101_1000 },
            { 'ル', 0b1101_1001 },
            { 'レ', 0b1101_1010 },
            { 'ロ', 0b1101_1011 },
            { 'ワ', 0b1101_1100 },
            { 'ン', 0b1101_1101 },
            { '゛', 0b1101_1110 },
            { '゜', 0b1101_1111 },

            { 'α', 0b1110_0000 },
            { 'ä', 0b1110_0001 },
            { 'β', 0b1110_0010 },
            { 'ε', 0b1110_0011 },
            { 'μ', 0b1110_0100 },
            { 'σ', 0b1110_0101 },
            { 'ρ', 0b1110_0110 },
            // g
            { '√', 0b1110_1000 },
            // -1
            // j
            // *
            { '¢', 0b1110_1100 },
            { '₤', 0b1110_1101 },
            { 'ñ', 0b1110_1110 },
            { 'ö', 0b1110_1111 },

            // p
            // q
            { 'θ', 0b1111_0010 },
            { '∞', 0b1111_0011 },
            { 'Ω', 0b1111_0100 },
            { 'ü', 0b1111_0101 },
            { '∑', 0b1111_0110 },
            { 'π', 0b1111_0111 },
            // x
            // y
            { '千', 0b1111_1010 },
            { '万', 0b1111_1011 },
            { '円', 0b1111_1100 },
            { '÷', 0b1111_1101 },

            { 'ｦ', 0b1010_0110 },
            { 'ｧ', 0b1010_0111 },
            { 'ｨ', 0b1010_1000 },
            { 'ｩ', 0b1010_1001 },
            { 'ｪ', 0b1010_1010 },
            { 'ｫ', 0b1010_1011 },
            { 'ｬ', 0b1010_1100 },
            { 'ｭ', 0b1010_1101 },
            { 'ｮ', 0b1010_1110 },
            { 'ｯ', 0b1010_1111 },

            { 'ｰ', 0b1011_0000 },
            { 'ｱ', 0b1011_0001 },
            { 'ｲ', 0b1011_0010 },
            { 'ｳ', 0b1011_0011 },
            { 'ｴ', 0b1011_0100 },
            { 'ｵ', 0b1011_0101 },
            { 'ｶ', 0b1011_0110 },
            { 'ｷ', 0b1011_0111 },
            { 'ｸ', 0b1011_1000 },
            { 'ｹ', 0b1011_1001 },
            { 'ｺ', 0b1011_1010 },
            { 'ｻ', 0b1011_1011 },
            { 'ｼ', 0b1011_1100 },
            { 'ｽ', 0b1011_1101 },
            { 'ｾ', 0b1011_1110 },
            { 'ｿ', 0b1011_1111 },

            { 'ﾀ', 0b1100_0000 },
            { 'ﾁ', 0b1100_0001 },
            { 'ﾂ', 0b1100_0010 },
            { 'ﾃ', 0b1100_0011 },
            { 'ﾄ', 0b1100_0100 },
            { 'ﾅ', 0b1100_0101 },
            { 'ﾆ', 0b1100_0110 },
            { 'ﾇ', 0b1100_0111 },
            { 'ﾈ', 0b1100_1000 },
            { 'ﾉ', 0b1100_1001 },
            { 'ﾊ', 0b1100_1010 },
            { 'ﾋ', 0b1100_1011 },
            { 'ﾌ', 0b1100_1100 },
            { 'ﾍ', 0b1100_1101 },
            { 'ﾎ', 0b1100_1110 },
            { 'ﾏ', 0b1100_1111 },

            { 'ﾐ', 0b1101_0000 },
            { 'ﾑ', 0b1101_0001 },
            { 'ﾒ', 0b1101_0010 },
            { 'ﾓ', 0b1101_0011 },
            { 'ﾔ', 0b1101_0100 },
            { 'ﾕ', 0b1101_0101 },
            { 'ﾖ', 0b1101_0110 },
            { 'ﾗ', 0b1101_0111 },
            { 'ﾘ', 0b1101_1000 },
            { 'ﾙ', 0b1101_1001 },
            { 'ﾚ', 0b1101_1010 },
            { 'ﾛ', 0b1101_1011 },
            { 'ﾜ', 0b1101_1100 },
            { 'ﾝ', 0b1101_1101 },
        };

        private static readonly Dictionary<char, string> LegatureMap = new Dictionary<char, string>
        {
            { 'ガ', "カ゛" },
            { 'ギ', "キ゛" },
            { 'グ', "ク゛" },
            { 'ゲ', "ケ゛" },
            { 'ゴ', "コ゛" },
            { 'ザ', "サ゛" },
            { 'ジ', "シ゛" },
            { 'ズ', "ス゛" },
            { 'ゼ', "セ゛" },
            { 'ゾ', "ソ゛" },
            { 'ダ', "タ゛" },
            { 'ヂ', "チ゛" },
            { 'ヅ', "ツ゛" },
            { 'デ', "テ゛" },
            { 'ド', "ト゛" },
            { 'バ', "ハ゛" },
            { 'ビ', "ヒ゛" },
            { 'ブ', "フ゛" },
            { 'ベ', "ヘ゛" },
            { 'ボ', "ホ゛" },
            { 'パ', "ハ゜" },
            { 'ピ', "ヒ゜" },
            { 'プ', "フ゜" },
            { 'ペ', "ヘ゜" },
            { 'ポ', "ホ゜" },
        };

        private static readonly Regex ReplaceRegex;

        #endregion

        #region -- Constructors --

        static JpmLcdChars()
        {
            var pattern = new StringBuilder().Append('[');

            foreach (var key in LegatureMap.Keys)
                pattern.Append(Regex.Escape(key.ToString()));

            pattern.Append(']');
            ReplaceRegex = new Regex(pattern.ToString(), RegexOptions.Compiled);
        }

        #endregion

        #region -- Public Methods --

        public static byte[] GetBytes(string text)
        {
            text = ReplaceRegex.Replace(text, m => LegatureMap[m.Value[0]]);
            return text.Select(ConvertFromChar).ToArray();
        }

        public static byte ConvertFromChar(char character)
        {
            if (character >= '\x10' && character <= '\x1f')
                throw new ArgumentOutOfRangeException(nameof(character));

            if (character <= '}')
                return (byte)character;

            if (CharacterMap.ContainsKey(character))
                return CharacterMap[character];

            throw new ArgumentOutOfRangeException(nameof(character));
        }

        #endregion
    }
}
